BIN	    SYM	NAME	MAKE		PALINDROME	EQUAL	POLAR	HEX

0000 	.	IDLES	$[]!S		Y			Y				0
0001	!	SWAPS	[[]!]!									1
0010	/	LATER	[[]]!					Y				2
0011	])	MERGE	[]!										3
0100	%	SIFTS	[[]!]					Y				4
0101	#	EXECS	[[]!/[]!]	Y							5
0110	>	DELEV	[[]!/[]]				Y				6
0111	=	EQUAL	[/[]!]!									7
1000	(	HALVE	[[]!]							Y		8
1001	<	UPLEV	[[]/[]!]				Y				9
1010	:	READS	[[]/[]]		Y					Y		A
1011	S	DEALC	[/[]]!          		Y				B
1100	[	SPLIT	[]								Y		C
1101	*	POLAR	[/[]!]          		Y				D
1110	$	DOALC	[/[]]							Y		E
1111	;	INPUT	$[]S		Y			Y				F

IDLES:
	Does nothing.
	
SWAPS:
	Selecting 1 bit:
		IDLES
	Otherwise:
		Switches the two halves of the selection.
		
LATER:
	Length < Total
		In first half of a split
			Go to second half of split
		Otherwise
			MERGE
	Otherwise
		MERGE
		
MERGE
	Length < Total
		Above split selection is unsplit and selected.
	Otherwise
		If there is an owner program
			Move selection to owner program, selecting first bit
			
SIFTS
	Moves all IDLES (0000) inside data to the right.
	If none,
		IDLES
		
EXECS
	Creates a lower program from the data owned by this program.
	From the current selection index, proceeds right, reading
	Each 4 bits as a command on the newly initialized data
	...which is owned by the new program.
	
	When the lower program finishes, the execs is either:
		If the finish was due to end of data,
			kept
		If the finish was due to program deallocation,
			replaced by IDLES if terminating bit was 0
			replaced by SWAPS if terminating bit was 1
			
DELEV
	Decrements level.
	
EQUAL
	Skips the next command if the selection's end bits are not equal.
	
HALVE
	If length > 1
		Split the selection into half-selections and select the left.
	Otherwise
		If there is a lower program
			Move selection to lower program, selecting all data
				HALVE
		Otherwise
			IDLES
			
UPLEV
	Move the program pointer to the beginning and increment level.
	
READS
	Selection is less than 4 bits
		Output to stdout as binary string
	Selection is 4 or 8 bits
		Output to stdout as char
	Selection is more
		Output 8 bit char string of selection to stdout
		
DEALC
	If total > 1
		Halve total program length
		HALVE
		(if the selection is in the right side, 
		 just move it to the left by total/2 bits)
	Otherwise
		If this has an owner program
			Replace EXECS (see above) and escape
		Otherwise
			End the program
			
SPLIT
	Split selection into halves.
	Force left all to 1, force right all to 0.
	Select left.
	
POLAR
	If selection first bit is not greater than selection last bit, skip next command
	
DOALC
	Double total if possible
	MERGE
	
INPUT
	Replace current selection with stdin
	Truncate if necessary
	

...


What is "level?"

LEVEL...

0:
	default level
	everything runs fine
	
1:
	DOALC is skipped.
	SPLIT is read as HALVE.
	
2:
	SWAPS is skipped.
	DEALC is skipped.
	
3:
	POLAR is skipped.
	
4:
	LATER blithly moves across binary partitions.
	
5:
	EQUAL is skipped.
	SIFTS is skipped.
	
6:
	INPUT is skipped.
	READS is skipped.
	
7:
	MERGE is skipped.
	HALVE is skipped.
	
8: (max)
	UPLEV decrements the pointer while restarting.